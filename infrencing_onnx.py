# -*- coding: utf-8 -*-
"""infrencing onnx.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qknJYotAQXF-YHeFqb3SApzhAdK51J41
"""

!pip install onnxruntime

import onnxruntime
import numpy as np
from PIL import Image
from torchvision import transforms

# Load the ONNX model
onnx_model_path = '/content/plant_disease_vit (1).onnx'
ort_session = onnxruntime.InferenceSession(onnx_model_path, providers=['CPUExecutionProvider'])

# Define input preprocessing
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
])

# Load and preprocess the input image
image_path = '/content/leaf-spot-fungus.jpg'  # Update with your image path
image = Image.open(image_path).convert("RGB")
image = transform(image)
image = image.numpy()
image = np.expand_dims(image, axis=0)  # Add batch dimension

# Perform inference
input_name = ort_session.get_inputs()[0].name
outputs = ort_session.run(None, {input_name: image})

# Process the outputs
probabilities = outputs[0]
predicted_class_index = np.argmax(probabilities)
predicted_class = classes[predicted_class_index]  # Assuming you have classes defined

print("Predicted class:", predicted_class)
print("Probabilities:", probabilities)